{"version":3,"file":"pages/deigmata/_id/edit.js","sources":["webpack:///./pages/deigmata/_id/edit.vue?5c34","webpack:///./pages/deigmata/_id/edit.vue","webpack:///./pages/deigmata/_id/edit.vue?d7f7","webpack:///./pages/deigmata/_id/edit.vue?d672"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\",\"justify-center\":\"\"}},[_c('v-flex',{staticClass:\"text-xs-center\",attrs:{\"xs12\":\"\",\"mt-5\":\"\"}},[_c('h2',{staticClass:\"headline\"},[_vm._v(\" \"+_vm._s(_vm.main.title)+\" \")])]),_vm._v(\" \"),(_vm.loading == true)?_c('v-flex',{staticClass:\"text-xs-center mt-5\",attrs:{\"xs8\":\"\",\"sm6\":\"\",\"md2\":\"\"}},[_c('v-progress-circular',{attrs:{\"indeterminate\":\"\",\"size\":\"45\",\"color\":\"green lighten-1\"}})],1):_vm._e(),_vm._v(\" \"),(_vm.noElements == true)?_c('v-flex',{staticClass:\"text-xs-center text-md-left\",staticStyle:{\"margin-top\":\"130px\"},attrs:{\"xs12\":\"\",\"lg11\":\"\"}},[_c('h3',{staticClass:\"font-weight-regular\"},[_vm._v(\" \"+_vm._s(_vm.main.emptyElements)+\" \")])]):(_vm.noElements == false)?_c('v-flex',{staticStyle:{\"margin-top\":\"100px\"},attrs:{\"xs12\":\"\",\"lg10\":\"\"}},[_c('div',{staticClass:\"my-5\"},[_c('v-card',[_c('div',{staticClass:\"green lighten-4\",staticStyle:{\"width\":\"100%\",\"height\":\"8px\"}}),_vm._v(\" \"),_c('v-form',{ref:\"form\",model:{value:(_vm.validation),callback:function ($$v) {_vm.validation=$$v},expression:\"validation\"}},[_c('v-layout',{attrs:{\"wrap\":\"\",\"justify-space-around\":\"\",\"pa-4\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"md5\":\"\"}},[_c('v-text-field',{attrs:{\"label\":\"Δείγμα Id\",\"color\":\"green\",\"readonly\":\"\"},model:{value:(_vm.deigma.id),callback:function ($$v) {_vm.$set(_vm.deigma, \"id\", $$v)},expression:\"deigma.id\"}})],1),_vm._v(\" \"),(_vm.deigma.deigmaThhlastikwn != null)?_c('v-flex',{attrs:{\"xs12\":\"\",\"md5\":\"\"}},[_c('v-text-field',{attrs:{\"label\":\"Δείγμα Θηλαστικών Id\",\"color\":\"green\",\"readonly\":\"\"},model:{value:(_vm.deigma.deigmaThhlastikwn.id),callback:function ($$v) {_vm.$set(_vm.deigma.deigmaThhlastikwn, \"id\", $$v)},expression:\"deigma.deigmaThhlastikwn.id\"}})],1):_vm._e(),_vm._v(\" \"),_c('v-flex',{attrs:{\"xs8\":\"\"}},[_c('v-autocomplete',{attrs:{\"label\":\"Πρωτόκολλο Id\",\"color\":\"green\",\"items\":_vm.prwtokollaList,\"rules\":_vm.prwtokolaIdRules,\"no-data-text\":\"Δεν βρέθηκαν δεδομένα\",\"required\":\"\"},model:{value:(_vm.deigma.prwtokola.id),callback:function ($$v) {_vm.$set(_vm.deigma.prwtokola, \"id\", $$v)},expression:\"deigma.prwtokola.id\"}})],1)],1),_vm._v(\" \"),_c('v-layout',{attrs:{\"pa-4\":\"\",\"justify-space-around\":\"\"}},[_c('h3',{staticClass:\"font-weight-medium mt-2\"},[_vm._v(\"Id: \"+_vm._s(_vm.id)+\" \")]),_vm._v(\" \"),_c('v-spacer'),_vm._v(\" \"),_c('v-btn',{staticStyle:{\"text-transform\":\"none\"},attrs:{\"color\":\"light-green lighten-1\",\"dark\":\"\"},on:{\"click\":function($event){return _vm.saveChanges()}}},[_vm._v(\"Αποθήκευση αλλαγών \"),_c('v-icon',{attrs:{\"small\":\"\",\"right\":\"\"}},[_vm._v(\"save\")])],1)],1)],1)],1)],1)]):_vm._e()],1),_vm._v(\" \"),_c('v-snackbar',{attrs:{\"timeout\":14000,\"color\":_vm.snackbarColor,\"multi-line\":true,\"auto-height\":true},model:{value:(_vm.snackbar),callback:function ($$v) {_vm.snackbar=$$v},expression:\"snackbar\"}},[_c('p',{staticClass:\"pt-2\"},[_vm._v(\" \"+_vm._s(_vm.snackbarText)+\" \")])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  head() {\r\n    return {\r\n      title: 'Δείγματα - Επεξεργασία | Φορέας Διαχείρισης Λίμνης Κερκίνης',\r\n      meta: [\r\n        {\r\n          hid: 'description', name: 'description',\r\n          content: 'Επεξεργασία συγκεκριμένου Δείγματος για τη διαχείρηση δεδομένων των Δειγμάτων για τον Φορέα Διαχείρισης Λίμνης Κερκίνης.'\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      main: {\r\n        title: 'Αναζήτηση Δείγματος με id ' + this.$route.params.id,\r\n        emptyElements: 'Δεν βρέθηκε αποθηκευμένο το Δείγμα που επιθυμείτε'\r\n      },\r\n      noElements: null,\r\n      deigma: {\r\n        id: '',\r\n        prwtokola: {\r\n          id: ''\r\n        },\r\n        deigmaThhlastikwn: {\r\n          id: ''\r\n        },\r\n      },\r\n      returnedObject: {\r\n        id: '',\r\n        prwtokola: {},\r\n        deigmaThhlastikwn: {},\r\n      },\r\n\r\n      // To fill through a mounted Get request\r\n      prwtokollaList: [],\r\n      validation: false,\r\n      prwtokolaIdRules: [\r\n        v => !!v || 'Συμπληρώστε το πεδίο Πρωτοκόλλου για το δείγμα',\r\n        v => !isNaN(v) || 'Το πεδίο πρέπει να είναι αριθμός'\r\n      ],\r\n\r\n      loading: null,\r\n      snackbar: false,\r\n      snackbarText: '',\r\n      snackbarColor: '',\r\n    }\r\n  },\r\n  computed: {\r\n    // Getting the distinct Prwtokola for autocomplete list. Used for Deigmata Init\r\n    getDistinctUrl(){\r\n      return this.$store.getters.getPrwtokolaDistinctUrl\r\n    },\r\n    getByIdUrl(){\r\n      return this.$store.getters.getDeigmataByIdUrl\r\n    },\r\n    id(){\r\n      return this.$route.params.id\r\n    }\r\n  },\r\n  mounted() {\r\n    // Getting Prwtokola for Deigmata Init\r\n    this.getPrwtokolaIdList()\r\n    this.restCall(this.id)\r\n  },\r\n  methods: {\r\n    // Getting Prwtokola for Deigmata Init\r\n    getPrwtokolaIdList() {\r\n      this.$axios.get(this.getDistinctUrl)\r\n        .then(response => {\r\n          if(response.data.length == []) {\r\n            this.snackbarColor = 'red'\r\n            this.snackbarText = 'Δεν βρέθηκαν αποθηκευμένα Πρωτόκολλα.'\r\n            this.snackbar = true\r\n          } else {\r\n            // Filling the Prwtokola list for the user\r\n            this.prwtokollaList = response.data\r\n          }\r\n        })\r\n        .catch(err => {\r\n          this.snackbarColor = 'red'\r\n          this.snackbarText = 'Υπήρξε κάποιο σφάλμα κατά την εύρεση Πρωτοκόλλων.'\r\n          this.snackbar = true\r\n          throw err\r\n        })\r\n    },\r\n    // Timeout the submit method and re-validate\r\n    submitTimeout() {\r\n      this.validation = false\r\n      setTimeout(() => {\r\n        this.validation = this.$refs.form.validate()\r\n      }, 10000);\r\n    },\r\n    checkForNulls(data){\r\n      // IMPORTANT: Using  JSON.parse to pass by value instead of pass by reference\r\n      if(data.prwtokola != null && data.deigmaThhlastikwn != null ){\r\n        this.deigma = JSON.parse(JSON.stringify(data))\r\n        this.returnedObject = JSON.parse(JSON.stringify(data))\r\n      }\r\n    },\r\n    restCall(id) {\r\n      this.loading = true\r\n      this.$axios.get(this.getByIdUrl + id)\r\n        .then((response) => {\r\n          if( response.data == \"\" ){\r\n            this.noElements = true\r\n            this.snackbarColor = 'red'\r\n            this.snackbarText = 'Δεν βρέθηκε αποθηκευμένο το πρωτόκολλο που επιθυμείτε'\r\n            this.snackbar = true\r\n          } else {\r\n            // Check for nulls in the returned data\r\n            this.checkForNulls(response.data)\r\n            this.noElements = false\r\n          }\r\n          this.loading = false\r\n        }).catch((err) => {\r\n          this.loading = false\r\n          this.snackbarColor = 'red'\r\n          this.snackbarText = 'Υπήρξε κάποιο σφάλμα στην αναζήτηση του πρωτοκόλλου'\r\n          this.snackbar = true\r\n          throw err\r\n        })\r\n    },\r\n    // Checking if the user is submitting to send the same data\r\n    checkForSavingTheSame(){\r\n      if (this.deigma.prwtokola.id == this.returnedObject.prwtokola.id) {\r\n          return true\r\n      }\r\n    },\r\n    // Checking for the values that will be Patched after the user's changes\r\n    checkValuesOfSendingData(){\r\n      let patchedDeigma = {\r\n        id: this.deigma.id,\r\n        kwdikosPrwtokolou: ''\r\n      }\r\n      // Elses not needed on the checks because sending without the attribute will generate on the back end the null value for it which will be overpassed without persisting (through my checking)\r\n      if( this.deigma.prwtokola.id != this.returnedObject.prwtokola.id) {\r\n        patchedDeigma.kwdikosPrwtokolou = this.deigma.prwtokola.id\r\n      }\r\n      return patchedDeigma\r\n    },\r\n    saveChanges(){\r\n      // Checking for the values that will be Patched after the user's changes\r\n      if ( this.checkForSavingTheSame() == true ) {\r\n        this.snackbarColor = 'red'\r\n        this.snackbarText = 'Δεν πραγματοποιήσατε καμία αλλαγή στα πεδία'\r\n        this.snackbar = true\r\n      } else {\r\n        // Checking for null - '' values and doing the request\r\n        let patchedDeigma = this.checkValuesOfSendingData()\r\n        // console.log(patchedDeigma)\r\n        this.$axios.patch(this.getByIdUrl + this.id, patchedDeigma)\r\n          .then(response => {\r\n            // console.log(response.data)\r\n            if(response.data == false) {\r\n              this.snackbarColor = 'red'\r\n              this.snackbarText = 'Οι αλλαγές δεν μπόρεσαν να αποθηκευθούν'\r\n              this.snackbar = true\r\n            } else if(response.data == true) {\r\n              this.snackbarColor = 'green'\r\n              this.snackbarText = 'Οι αλλαγές σας αποθηκεύθηκαν επιτυχώς'\r\n              this.snackbar = true\r\n              this.$router.push('/deigmata/' + this.id)\r\n            }\r\n            // Not checking for any other value because there shouldn't exist any different case\r\n          })\r\n          .catch(err => {\r\n            this.snackbarColor = 'red'\r\n            this.snackbarText = 'Οι αλλαγές δεν μπόρεσαν να αποθηκευθούν'\r\n            this.snackbar = true\r\n            // Timeout the submit method and re-validate\r\n            this.submitTimeout()\r\n            throw err\r\n          })\r\n      }\r\n    }\r\n  }\r\n}\r\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--2-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--2-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=571e5dd7&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  \"488a3a74\"\n  \n)\n\nexport default component.exports"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAFA;AAHA;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAhCA;AAkCA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAXA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/GA;AAjEA;;ACzEA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}